<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 0.1 $ -->
<!-- Purpose: database.vendors -->
<!-- Membership: bundled, external -->

 <reference id="ref.xcc">
  <title>XCC Functions</title>
  <titleabbrev>XCC</titleabbrev>

  <partintro>
   <section id="xcc.intro">
    &reftitle.intro;
    <para>These functions give you the ability to connect, issue queries and
     insert documents into a Mark Logic XML database.  For more information
     about the Mark Logic database visit <ulink
     url="http://www.marklogic.com">http://www.marklogic.com</ulink>.
    </para>
   </section>

   <section id="xcc.requirements">
    &reftitle.required;
    <para>
     In order to have these functions available, you must compile PHP with
     XCC support.
    </para>
   </section>
    
    &reference.xcc.configure;

   <section id="xcc.resources">
   &reftitle.resources;
    <para>
     The XCC module has three different resource types.  The first resource
     is used to hold the connection to the database.  The second resource is
     for building, executing and fetching results from queries.  The third
     resource is used for inserting documents into the database.
    </para>
   </section>

   &reference.xcc.constants;
    
   <section id="xcc.notes">
   &reftitle.notes;
    <note>
     <para>
      Most of the XCC functions have a <parameter>link</parameter> as the
      last parameter. This parameter is optional and if not provided the
      last opened connection is used.  This behavior should be familiar to
      users of the mysql functions.
     </para>
    </note>
   </section>

   <section id="xcc.examples">
   &reftitle.examples;
    <para>
     This basic example shows how to connect, execute a query, print
     the resulting items and disconnect from a Mark Logic XCC database.
     <example>
      <title>Basic XCC extension example</title>
      <programlisting role="php">
<![CDATA[
<?php
// Connect to the database
xcc_connect($user, $password, $host, $port) or die("Counld not connect to server: " . xcc_error());

// Find all of the titles in articles and get them out as strings
$results = xcc_submit_query('for $i in /article//title return string($i)') or die("Can't execute query: " . xcc_error());

// Itterate over the the items and print out the 'data' from each
while($item = xcc_fetch_next($results)) {
    echo $item['data'], "<br/>";	// you can get the XML Schema type out with the 'type' key
}

// Close the connection
xcc_close();
?>
]]>
      </programlisting>
     </example>
    </para>
   </section>
  </partintro>

&reference.xcc.functions;

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
