<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 0.1 $ -->
<refentry id="function.xcc-new-module-spawn">
 <refnamediv>
  <refname>xcc_new_module_spawn</refname>
  <refpurpose>Creates a new resource for spawning a module</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>xcc_new_module_spawn</methodname>
   <methodparam><type>string</type><parameter>uri</parameter></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>link</parameter></methodparam>
  </methodsynopsis>
  <para>
   Sets up a module to be spawned.  The uri should be set to the uri
   where the module can be found in the database.  External variables
   can be set on the returned request variable.  The spawned module is placed
   into the processing queue for execution.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>uri</parameter></term>
     <listitem>
      <para>
       The uri should be set to the uri where the module can be found in the
       database. Spawned modules must live in the database, not the
       filesystem.
      </para>
     </listitem>
    </varlistentry>
    &xcc.link.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a request resource that can be passed into
   <function>xcc_submit_request()</function>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>xcc_new_module_spawn</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
xcc_new_session($user, $password, $host, $database, $port)
    or die("Counld not connect to server: " . xcc_error());

$stmt = xcc_new_module_spawn('http://example.com/sample.xqy')
    or die("Can't spawn module: " . xcc_error());

xcc_submit_query($stmt)
    or die("Can't execute query: " . xcc_error());
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>xcc_set_variable</function></member>
    <member><function>xcc_submit_request</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
