<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 0.1 $ -->
<refentry id="function.xcc-new-adhoc-query">
 <refnamediv>
  <refname>xcc_new_adhoc_query</refname>
  <refpurpose>Creates a new query statement</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>xcc_new_adhoc_query</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>link</parameter></methodparam>
  </methodsynopsis>
  <para>
   Creates a new statement for issuing a query.  This function does not
   execute the query but simply returns a resource that can be executed later.
  </para>
  <para>
   This function should be used whenever the use of bind variables is needed.
   If the query does not require bind varables then
   <function>xcc_submit_query</function> might be convenient.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       The query to be executed.  When using bind variables the typical
       question mark (?) is not used.  Bind variables are implemented using
       external variables so your query should simpley reference the variable.
       See the <function>xcc_set_variable</function> for more info.
      </para>
     </listitem>
    </varlistentry>
    &xcc.link.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a request resource that can be passed into
   <function>xcc_submit_request()</function>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>xcc_new_adhoc_query</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
xcc_new_session($user, $password, $host, $database, $port) or die("Counld not connect to server: " . xcc_error());

// find all of the articles for a author
// NOTE: you must define all bind variable in your xquery as external
$stmt = xcc_new_adhoc_query('
        define variable $author as xs:string external
        for $i in /article[@author = $author]/title return string($i)
    ') or die("Can't create statement: " . xcc_error());

// set the bind variable to 'Grimm'
xcc_set_variable($stmt, "author", "Grimm");

$results = xcc_submit_query($stmt) or die("Can't execute query: " . xcc_error());
while($item = xcc_fetch_next($results)) {
    echo $item['data'], "<br/>";
}

// set the bind variable again to 'Bruno'
xcc_set_variable($stmt, "author", "Bruno");

$results = xcc_submit_query($stmt) or die("Can't execute query: " . xcc_error());
while($item = xcc_fetch_next($results)) {
    echo $item['data'], "<br/>";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>xcc_set_variable</function></member>
    <member><function>xcc_submit_request</function></member>
    <member><function>xcc_submit_query</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
